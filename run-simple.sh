#!/bin/bash

echo "üöÄ Starting Self-Healing E-commerce Agents System (Simple Mode)"
echo "==============================================================="
echo ""
echo "This setup uses SQLite and in-memory event bus (no Docker required)"
echo ""

# Check if Python is available
if ! command -v python3 &> /dev/null; then
    echo "‚ùå Python 3 is not installed. Please install Python 3.8+ first."
    exit 1
fi

# Check if Node.js is available
if ! command -v node &> /dev/null; then
    echo "‚ùå Node.js is not installed. Please install Node.js 16+ first."
    exit 1
fi

echo "‚úÖ Prerequisites check passed"
echo ""

echo "üîß Setup Instructions:"
echo "======================"
echo ""
echo "1. Backend Setup:"
echo "   cd backend"
echo "   pip install -r requirements.txt"
echo "   python main.py"
echo ""
echo "2. Frontend Setup (in another terminal):"
echo "   cd frontend"
echo "   npm install"
echo "   npm run dev"
echo ""
echo "3. Open your browser:"
echo "   Frontend: http://localhost:5173"
echo "   Backend API: http://localhost:8000"
echo "   API Docs: http://localhost:8000/docs"
echo ""
echo "4. Trigger a healing demo:"
echo "   Click 'Trigger Failure' button in the UI"
echo "   Or use: curl -X POST http://localhost:8000/api/trigger-failure"
echo ""
echo "üéØ The system will demonstrate:"
echo "‚Ä¢ Real-time failure detection"
echo "‚Ä¢ Autonomous root cause analysis"
echo "‚Ä¢ Code patch generation using Morph API"
echo "‚Ä¢ Safe patch application with rollback"
echo "‚Ä¢ Verification and healing completion"
echo "‚Ä¢ Live UI updates via Server-Sent Events"
echo ""
echo "üí° This simplified version uses:"
echo "‚Ä¢ SQLite database (no PostgreSQL needed)"
echo "‚Ä¢ In-memory event bus (no Redis needed)"
echo "‚Ä¢ No Docker containers required"
echo ""
echo "Ready to start! Run the commands above in separate terminals." 