#!/bin/bash

echo "üöÄ Starting Self-Healing E-commerce Agents System"
echo "=================================================="

# Check if Docker is running
if ! docker info > /dev/null 2>&1; then
    echo "‚ùå Docker is not running. Please start Docker first."
    exit 1
fi

# Start services
echo "üì¶ Starting Redis and PostgreSQL services..."
docker-compose up -d

# Wait for services to be healthy
echo "‚è≥ Waiting for services to be ready..."
sleep 5

# Check if services are running
if docker-compose ps | grep -q "Up"; then
    echo "‚úÖ Services are running"
else
    echo "‚ùå Failed to start services"
    exit 1
fi

echo ""
echo "üîß Setup Instructions:"
echo "======================"
echo ""
echo "1. Backend Setup:"
echo "   cd backend"
echo "   pip install -r requirements.txt"
echo "   python main.py"
echo ""
echo "2. Frontend Setup (in another terminal):"
echo "   cd frontend"
echo "   npm install"
echo "   npm run dev"
echo ""
echo "3. Open your browser:"
echo "   Frontend: http://localhost:5173"
echo "   Backend API: http://localhost:8000"
echo "   API Docs: http://localhost:8000/docs"
echo ""
echo "4. Trigger a healing demo:"
echo "   Click 'Trigger Failure' button in the UI"
echo "   Or use: curl -X POST http://localhost:8000/api/trigger-failure"
echo ""
echo "üéØ The system will demonstrate:"
echo "‚Ä¢ Real-time failure detection"
echo "‚Ä¢ Autonomous root cause analysis"
echo "‚Ä¢ Code patch generation using Morph API"
echo "‚Ä¢ Safe patch application with rollback"
echo "‚Ä¢ Verification and healing completion"
echo "‚Ä¢ Live UI updates via Server-Sent Events"
echo ""
echo "üí° To stop services: docker-compose down" 